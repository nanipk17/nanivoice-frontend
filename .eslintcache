[{"D:\\poc\\react-embedd\\src\\index.js":"1","D:\\poc\\react-embedd\\src\\App.js":"2","D:\\poc\\react-embedd\\src\\components\\ChatBot.js":"3","D:\\poc\\react-embedd\\src\\hooks\\recordAudio.js":"4","D:\\poc\\react-embedd\\src\\components\\ChatbotTest.js":"5"},{"size":403,"mtime":1691463171324,"results":"6","hashOfConfig":"7"},{"size":397,"mtime":1691516473364,"results":"8","hashOfConfig":"7"},{"size":8739,"mtime":1691513725076,"results":"9","hashOfConfig":"7"},{"size":2590,"mtime":1691395407089,"results":"10","hashOfConfig":"7"},{"size":8817,"mtime":1691548584827,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xonovq",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\poc\\react-embedd\\src\\index.js",[],"D:\\poc\\react-embedd\\src\\App.js",["23"],"D:\\poc\\react-embedd\\src\\components\\ChatBot.js",["24","25","26","27","28","29","30","31","32","33","34","35","36","37"],"D:\\poc\\react-embedd\\src\\hooks\\recordAudio.js",["38","39"],"import { useState, useCallback } from 'react'\r\n\r\nconst useAudioRecorder = (\r\n  audioTrackConstraints,\r\n  onNotAllowedOrFound,\r\n  mediaRecorderOptions\r\n) => {\r\n  const [isRecording, setIsRecording] = useState(false)\r\n  const [isPaused, setIsPaused] = useState(false)\r\n  const [recordingTime, setRecordingTime] = useState(0)\r\n  const [mediaRecorder, setMediaRecorder] = useState()\r\n  const [timerInterval, setTimerInterval] = useState()\r\n  const [recordingBlob, setRecordingBlob] = useState()\r\n\r\n  const _startTimer = useCallback(() => {\r\n    const interval = setInterval(() => {\r\n      setRecordingTime((time) => time + 1)\r\n    }, 1000)\r\n    setTimerInterval(interval)\r\n  }, [setRecordingTime, setTimerInterval])\r\n\r\n  const _stopTimer = useCallback(() => {\r\n    if (timerInterval != null) clearInterval(timerInterval)\r\n    setTimerInterval(undefined)\r\n  }, [timerInterval, setTimerInterval])\r\n\r\n  const startRecording = useCallback(() => {\r\n    if (timerInterval != null) return\r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia({ audio: audioTrackConstraints ?? true })\r\n      .then((stream) => {\r\n        setIsRecording(true)\r\n        const recorder = new MediaRecorder(stream, mediaRecorderOptions)\r\n        setMediaRecorder(recorder)\r\n        recorder.start()\r\n        _startTimer()\r\n\r\n        recorder.addEventListener('dataavailable', (event) => {\r\n          setRecordingBlob(event.data)\r\n          recorder.stream.getTracks().forEach((t) => t.stop())\r\n          setMediaRecorder(undefined)\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.name, err.message, err.cause)\r\n        onNotAllowedOrFound?.(err)\r\n      })\r\n  }, [\r\n    timerInterval,\r\n    setIsRecording,\r\n    setMediaRecorder,\r\n    _startTimer,\r\n    setRecordingBlob,\r\n    onNotAllowedOrFound,\r\n    mediaRecorderOptions,\r\n  ])\r\n\r\n  const stopRecording = useCallback(() => {\r\n    mediaRecorder?.stop()\r\n    _stopTimer()\r\n    setRecordingTime(0)\r\n    setIsRecording(false)\r\n    setIsPaused(false)\r\n  }, [mediaRecorder, setRecordingTime, setIsRecording, setIsPaused, _stopTimer])\r\n\r\n  const togglePauseResume = useCallback(() => {\r\n    if (isPaused) {\r\n      setIsPaused(false)\r\n      mediaRecorder?.resume()\r\n      _startTimer()\r\n    } else {\r\n      setIsPaused(true)\r\n      _stopTimer()\r\n      mediaRecorder?.pause()\r\n    }\r\n  }, [mediaRecorder, setIsPaused, _startTimer, _stopTimer])\r\n\r\n  return {\r\n    startRecording,\r\n    stopRecording,\r\n    togglePauseResume,\r\n    recordingBlob,\r\n    isRecording,\r\n    isPaused,\r\n    recordingTime,\r\n    mediaRecorder,\r\n  }\r\n}\r\n\r\nexport default useAudioRecorder\r\n","D:\\poc\\react-embedd\\src\\components\\ChatbotTest.js",["40","41","42","43","44","45","46","47","48","49","50","51","52"],{"ruleId":"53","severity":1,"message":"54","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":15},{"ruleId":"53","severity":1,"message":"57","line":1,"column":38,"nodeType":"55","messageId":"56","endLine":1,"endColumn":44},{"ruleId":"53","severity":1,"message":"58","line":19,"column":5,"nodeType":"55","messageId":"56","endLine":19,"endColumn":18},{"ruleId":"53","severity":1,"message":"59","line":24,"column":21,"nodeType":"55","messageId":"56","endLine":24,"endColumn":33},{"ruleId":"53","severity":1,"message":"60","line":26,"column":10,"nodeType":"55","messageId":"56","endLine":26,"endColumn":16},{"ruleId":"53","severity":1,"message":"61","line":26,"column":18,"nodeType":"55","messageId":"56","endLine":26,"endColumn":27},{"ruleId":"53","severity":1,"message":"62","line":27,"column":10,"nodeType":"55","messageId":"56","endLine":27,"endColumn":19},{"ruleId":"53","severity":1,"message":"63","line":34,"column":5,"nodeType":"55","messageId":"56","endLine":34,"endColumn":13},{"ruleId":"53","severity":1,"message":"64","line":35,"column":5,"nodeType":"55","messageId":"56","endLine":35,"endColumn":18},{"ruleId":"53","severity":1,"message":"65","line":39,"column":9,"nodeType":"55","messageId":"56","endLine":39,"endColumn":19},{"ruleId":"66","severity":1,"message":"67","line":54,"column":6,"nodeType":"68","endLine":54,"endColumn":21,"suggestions":"69"},{"ruleId":"53","severity":1,"message":"70","line":56,"column":9,"nodeType":"55","messageId":"56","endLine":56,"endColumn":35},{"ruleId":"53","severity":1,"message":"71","line":77,"column":23,"nodeType":"55","messageId":"56","endLine":77,"endColumn":28},{"ruleId":"66","severity":1,"message":"72","line":138,"column":6,"nodeType":"68","endLine":138,"endColumn":31,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":198,"column":16,"nodeType":"76","messageId":"77","endLine":198,"endColumn":18},{"ruleId":"66","severity":1,"message":"78","line":49,"column":6,"nodeType":"68","endLine":57,"endColumn":4,"suggestions":"79"},{"ruleId":"66","severity":1,"message":"80","line":77,"column":6,"nodeType":"68","endLine":77,"endColumn":59,"suggestions":"81"},{"ruleId":"53","severity":1,"message":"57","line":1,"column":38,"nodeType":"55","messageId":"56","endLine":1,"endColumn":44},{"ruleId":"53","severity":1,"message":"58","line":19,"column":5,"nodeType":"55","messageId":"56","endLine":19,"endColumn":18},{"ruleId":"53","severity":1,"message":"59","line":24,"column":21,"nodeType":"55","messageId":"56","endLine":24,"endColumn":33},{"ruleId":"53","severity":1,"message":"60","line":26,"column":10,"nodeType":"55","messageId":"56","endLine":26,"endColumn":16},{"ruleId":"53","severity":1,"message":"61","line":26,"column":18,"nodeType":"55","messageId":"56","endLine":26,"endColumn":27},{"ruleId":"53","severity":1,"message":"62","line":27,"column":10,"nodeType":"55","messageId":"56","endLine":27,"endColumn":19},{"ruleId":"53","severity":1,"message":"63","line":34,"column":5,"nodeType":"55","messageId":"56","endLine":34,"endColumn":13},{"ruleId":"53","severity":1,"message":"64","line":35,"column":5,"nodeType":"55","messageId":"56","endLine":35,"endColumn":18},{"ruleId":"53","severity":1,"message":"65","line":39,"column":9,"nodeType":"55","messageId":"56","endLine":39,"endColumn":19},{"ruleId":"66","severity":1,"message":"67","line":54,"column":6,"nodeType":"68","endLine":54,"endColumn":21,"suggestions":"82"},{"ruleId":"53","severity":1,"message":"70","line":56,"column":9,"nodeType":"55","messageId":"56","endLine":56,"endColumn":35},{"ruleId":"66","severity":1,"message":"72","line":139,"column":6,"nodeType":"68","endLine":139,"endColumn":31,"suggestions":"83"},{"ruleId":"74","severity":1,"message":"75","line":200,"column":16,"nodeType":"76","messageId":"77","endLine":200,"endColumn":18},"no-unused-vars","'ChatBot' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'mediaRecorder' is assigned a value but never used.","'setIsBlocked' is assigned a value but never used.","'record' is assigned a value but never used.","'setRecord' is assigned a value but never used.","'audioBlob' is assigned a value but never used.","'isPaused' is assigned a value but never used.","'recordingTime' is assigned a value but never used.","'handleStop' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleAudioRecordingComplete'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'handlePauseResumeRecording' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleChatRequest'. Either include it or remove the dependency array.",["85"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useCallback has a missing dependency: 'audioTrackConstraints'. Either include it or remove the dependency array.",["86"],"React Hook useCallback has a missing dependency: 'isPaused'. Either include it or remove the dependency array.",["87"],["88"],["89"],{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"90","fix":"98"},{"desc":"92","fix":"99"},"Update the dependencies array to be: [handleAudioRecordingComplete, recordingBlob]",{"range":"100","text":"101"},"Update the dependencies array to be: [handleChatRequest, messagesArray, products]",{"range":"102","text":"103"},"Update the dependencies array to be: [timerInterval, audioTrackConstraints, mediaRecorderOptions, _startTimer, onNotAllowedOrFound]",{"range":"104","text":"105"},"Update the dependencies array to be: [isPaused, mediaRecorder, _startTimer, _stopTimer]",{"range":"106","text":"107"},{"range":"108","text":"101"},{"range":"109","text":"103"},[1674,1689],"[handleAudioRecordingComplete, recordingBlob]",[3945,3970],"[handleChatRequest, messagesArray, products]",[1651,1815],"[timerInterval, audioTrackConstraints, mediaRecorderOptions, _startTimer, onNotAllowedOrFound]",[2319,2372],"[isPaused, mediaRecorder, _startTimer, _stopTimer]",[1677,1692],[4016,4041]]